name: 'Test'
on:
  pull_request:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    services:
      docker:
        image: docker:19.03.12
        options: --privileged

    steps:
      - uses: actions/checkout@v4
      - name: 'Install Docker'
        run: |
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - name: 'Build Docker Image'
        env:
          NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
          NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
          NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
          NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
          NEXT_PUBLIC_CLERK_SIGN_OUT_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_OUT_URL }}
          MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
          MAILGUN_API_URL: ${{ secrets.MAILGUN_API_URL }}
          MAILGUN_PUBLIC_KEY: ${{ secrets.MAILGUN_PUBLIC_KEY }}
          MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          LEMON_SQUEEZY_API_KEY: ${{ secrets.LEMON_SQUEEZY_API_KEY }}
          LEMON_SQUEEZY_STORE_ID: ${{ secrets.LEMON_SQUEEZY_STORE_ID }}
          LEMON_SQUEEZY_WEBHOOK_SECRET: ${{ secrets.LEMON_SQUEEZY_WEBHOOK_SECRET }}
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
          TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
          TEST_EMAIL_SUB: ${{ secrets.TEST_EMAIL_SUB }}
          TEST_PASSWORD_SUB: ${{ secrets.TEST_PASSWORD_SUB }}
          ENABLE_TEST_LOGS: ${{ secrets.ENABLE_TEST_LOGS }}
        run: docker build -t my-app .
      - name: 'Run Docker Container'
        run: docker run -d -p 3000:3000 --name my-app-container my-app
      - name: 'Wait for the application to be ready'
        run: |
          while ! nc -z localhost 3000; do
            sleep 1
          done
      - name: 'Install Node'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
            - args: [--global, gulp, prettier, vitest]
      - name: 'Install Playwright Browsers'
        run: pnpm exec playwright install
      - name: 'Run Unit and Integration Tests'
        run: pnpm test:ci
      - name: 'Run ESLint'
        run: pnpm lint
      - name: 'Run E2E Tests'
        if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
        run: pnpm test:e2e
      - name: 'Run E2E General Tests'
        if: github.event_name == 'pull_request'
        run: pnpm test:e2e:general
      - name: 'Report Coverage'
        if: always()
        uses: davelosert/vitest-coverage-report-action@v2
      - name: 'Stop and remove Docker container'
        if: always()
        run: docker stop my-app-container && docker rm my-app-container