name: 'Test and Deploy'

env:
  NEXT_PUBLIC_URL: ${{ secrets.NEXT_PUBLIC_URL }}
  NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
  CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
  NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
  NEXT_PUBLIC_CLERK_SIGN_UP_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_UP_URL }}
  NEXT_PUBLIC_CLERK_SIGN_OUT_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_OUT_URL }}
  MAILGUN_API_KEY: ${{ secrets.MAILGUN_API_KEY }}
  MAILGUN_API_URL: ${{ secrets.MAILGUN_API_URL }}
  MAILGUN_PUBLIC_KEY: ${{ secrets.MAILGUN_PUBLIC_KEY }}
  MAILGUN_DOMAIN: ${{ secrets.MAILGUN_DOMAIN }}
  OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  LEMON_SQUEEZY_API_KEY: ${{ secrets.LEMON_SQUEEZY_API_KEY }}
  LEMON_SQUEEZY_STORE_ID: ${{ secrets.LEMON_SQUEEZY_STORE_ID }}
  LEMON_SQUEEZY_WEBHOOK_SECRET: ${{ secrets.LEMON_SQUEEZY_WEBHOOK_SECRET }}
  DATABASE_URL: ${{ secrets.DATABASE_URL }}
  TEST_EMAIL: ${{ secrets.TEST_EMAIL }}
  TEST_PASSWORD: ${{ secrets.TEST_PASSWORD }}
  TEST_EMAIL_SUB: ${{ secrets.TEST_EMAIL_SUB }}
  TEST_PASSWORD_SUB: ${{ secrets.TEST_PASSWORD_SUB }}
  ENABLE_TEST_LOGS: ${{ secrets.ENABLE_TEST_LOGS }}

on:
  pull_request:
  push:
    tags:
      - '*'

jobs:
  test:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
      - name: 'Install Docker'
        run: |
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
            - args: [--global, gulp, prettier, vitest]
      - name: 'Build Docker Image for Testing'
        run: |
          docker build -f Dockerfile.test -t my-app:test \
            --build-arg NEXT_PUBLIC_URL=${{ env.NEXT_PUBLIC_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} \
            --build-arg CLERK_SECRET_KEY=${{ env.CLERK_SECRET_KEY }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_IN_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_UP_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_OUT_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_OUT_URL }} \
            --build-arg MAILGUN_API_KEY=${{ env.MAILGUN_API_KEY }} \
            --build-arg MAILGUN_API_URL=${{ env.MAILGUN_API_URL }} \
            --build-arg MAILGUN_PUBLIC_KEY=${{ env.MAILGUN_PUBLIC_KEY }} \
            --build-arg MAILGUN_DOMAIN=${{ env.MAILGUN_DOMAIN }} \
            --build-arg OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
            --build-arg JWT_SECRET=${{ env.JWT_SECRET }} \
            --build-arg LEMON_SQUEEZY_API_KEY=${{ env.LEMON_SQUEEZY_API_KEY }} \
            --build-arg LEMON_SQUEEZY_STORE_ID=${{ env.LEMON_SQUEEZY_STORE_ID }} \
            --build-arg LEMON_SQUEEZY_WEBHOOK_SECRET=${{ env.LEMON_SQUEEZY_WEBHOOK_SECRET }} \
            --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
            --build-arg TEST_EMAIL=${{ env.TEST_EMAIL }} \
            --build-arg TEST_PASSWORD=${{ env.TEST_PASSWORD }} \
            --build-arg TEST_EMAIL_SUB=${{ env.TEST_EMAIL_SUB }} \
            --build-arg TEST_PASSWORD_SUB=${{ env.TEST_PASSWORD_SUB }} \
            --build-arg ENABLE_TEST_LOGS=${{ env.ENABLE_TEST_LOGS }} \
            .
      - name: 'Run Tests'
        run: docker run --rm my-app:test pnpm test:ci

  deploy:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - uses: actions/checkout@v4
      - name: 'Install Docker'
        run: |
          sudo apt-get update
          sudo apt-get install docker-ce docker-ce-cli containerd.io
      - name: 'Set up Node.js'
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - uses: pnpm/action-setup@v4
        with:
          version: latest
          run_install: |
            - recursive: true
              args: [--frozen-lockfile]
            - args: [--global, gulp, prettier, vitest]
      - name: 'Build Docker Image for Production'
        run: |
          docker build -f Dockerfile.test -t my-app:test \
            --build-arg NEXT_PUBLIC_URL=${{ env.NEXT_PUBLIC_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY=${{ env.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }} \
            --build-arg CLERK_SECRET_KEY=${{ env.CLERK_SECRET_KEY }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_IN_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_IN_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_UP_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_UP_URL }} \
            --build-arg NEXT_PUBLIC_CLERK_SIGN_OUT_URL=${{ env.NEXT_PUBLIC_CLERK_SIGN_OUT_URL }} \
            --build-arg MAILGUN_API_KEY=${{ env.MAILGUN_API_KEY }} \
            --build-arg MAILGUN_API_URL=${{ env.MAILGUN_API_URL }} \
            --build-arg MAILGUN_PUBLIC_KEY=${{ env.MAILGUN_PUBLIC_KEY }} \
            --build-arg MAILGUN_DOMAIN=${{ env.MAILGUN_DOMAIN }} \
            --build-arg OPENAI_API_KEY=${{ env.OPENAI_API_KEY }} \
            --build-arg JWT_SECRET=${{ env.JWT_SECRET }} \
            --build-arg LEMON_SQUEEZY_API_KEY=${{ env.LEMON_SQUEEZY_API_KEY }} \
            --build-arg LEMON_SQUEEZY_STORE_ID=${{ env.LEMON_SQUEEZY_STORE_ID }} \
            --build-arg LEMON_SQUEEZY_WEBHOOK_SECRET=${{ env.LEMON_SQUEEZY_WEBHOOK_SECRET }} \
            --build-arg DATABASE_URL=${{ env.DATABASE_URL }} \
            --build-arg TEST_EMAIL=${{ env.TEST_EMAIL }} \
            --build-arg TEST_PASSWORD=${{ env.TEST_PASSWORD }} \
            --build-arg TEST_EMAIL_SUB=${{ env.TEST_EMAIL_SUB }} \
            --build-arg TEST_PASSWORD_SUB=${{ env.TEST_PASSWORD_SUB }} \
            --build-arg ENABLE_TEST_LOGS=${{ env.ENABLE_TEST_LOGS }} \
            .
      - name: 'Deploy'
        run: docker run --rm my-app:test pnpm run start